{"ast":null,"code":"var _jsxFileName = \"/home/reki/vin-scanner/src/App.js\",\n  _s = $RefreshSig$();\n// App.jsx - Main component for the VIN Scanner app\nimport React, { useState, useRef, useEffect } from 'react';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [vins, setVins] = useState([]);\n  const [scanning, setScanning] = useState(false);\n  const [currentVin, setCurrentVin] = useState('');\n  const [error, setError] = useState('');\n  const [showCamera, setShowCamera] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment'\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        streamRef.current = stream;\n        setShowCamera(true);\n      }\n    } catch (err) {\n      setError('Camera access denied or not available');\n      console.error('Error accessing camera:', err);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n      setShowCamera(false);\n    }\n  };\n\n  // Clean up on unmount\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n  }, []);\n\n  // Capture image from camera\n  const captureImage = () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Match canvas size to video feed\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw the current video frame to the canvas\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert canvas to blob for OCR processing\n    canvas.toBlob(processImage, 'image/jpeg');\n    setScanning(true);\n  };\n\n  // Process image with Tesseract OCR\n  const processImage = async blob => {\n    try {\n      const result = await Tesseract.recognize(blob, 'eng', {\n        logger: m => console.log(m),\n        tessedit_char_whitelist: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n      });\n\n      // Clean and parse the text to find potential VINs\n      const text = result.data.text;\n      console.log('OCR Result:', text);\n\n      // Look for VIN-like patterns (17 alphanumeric characters)\n      const potentialVins = extractPotentialVins(text);\n      if (potentialVins.length > 0) {\n        // Try to validate each potential VIN\n        const validVin = potentialVins.find(validateVin);\n        if (validVin) {\n          setCurrentVin(validVin);\n          setError('');\n        } else {\n          setError('No valid VIN found in scan. Try again.');\n        }\n      } else {\n        setError('No VIN-like pattern found. Try again.');\n      }\n    } catch (err) {\n      setError('Failed to process image. Try again.');\n      console.error('OCR error:', err);\n    }\n    setScanning(false);\n  };\n\n  // Extract potential VINs from OCR text\n  const extractPotentialVins = text => {\n    // Clean the text (remove spaces, new lines, etc.)\n    const cleanText = text.replace(/[\\s\\n\\r\\t]/g, '');\n\n    // Look for 17-character sequences of letters and numbers\n    const vinRegex = /[A-HJ-NPR-Z0-9]{17}/gi; // VINs don't use I, O, or Q\n    return cleanText.match(vinRegex) || [];\n  };\n\n  // Validate a VIN using the standard VIN validation algorithm\n  const validateVin = vin => {\n    // Basic validation - length must be exactly 17\n    if (vin.length !== 17) return false;\n\n    // Check for invalid characters (I, O, Q are not used in VINs)\n    if (/[IOQ]/i.test(vin)) return false;\n\n    // This is a simplified validation\n    // A real implementation would include checksum validation\n    // For now we're just checking format\n    return true;\n  };\n\n  // Handle file uploads\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setScanning(true);\n    const reader = new FileReader();\n    reader.onload = async event => {\n      try {\n        const result = await Tesseract.recognize(event.target.result, 'eng', {\n          logger: m => console.log(m),\n          tessedit_char_whitelist: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n        });\n        const text = result.data.text;\n        console.log('OCR Result:', text);\n        const potentialVins = extractPotentialVins(text);\n        if (potentialVins.length > 0) {\n          const validVin = potentialVins.find(validateVin);\n          if (validVin) {\n            setCurrentVin(validVin);\n            setError('');\n          } else {\n            setError('No valid VIN found in image. Try again.');\n          }\n        } else {\n          setError('No VIN-like pattern found. Try again.');\n        }\n      } catch (err) {\n        setError('Failed to process image. Try again.');\n        console.error('OCR error:', err);\n      }\n      setScanning(false);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Save current VIN to the list\n  const saveVin = () => {\n    if (currentVin && validateVin(currentVin)) {\n      const timestamp = new Date().toISOString();\n      setVins([...vins, {\n        vin: currentVin,\n        timestamp\n      }]);\n      setCurrentVin('');\n\n      // Also save to localStorage for persistence\n      const savedVins = JSON.parse(localStorage.getItem('savedVins') || '[]');\n      localStorage.setItem('savedVins', JSON.stringify([...savedVins, {\n        vin: currentVin,\n        timestamp\n      }]));\n    }\n  };\n\n  // Load saved VINs on initial render\n  useEffect(() => {\n    const savedVins = JSON.parse(localStorage.getItem('savedVins') || '[]');\n    setVins(savedVins);\n  }, []);\n\n  // Export to CSV\n  const exportToCSV = () => {\n    if (vins.length === 0) {\n      setError('No VINs to export');\n      return;\n    }\n    const csvContent = ['VIN,Timestamp', ...vins.map(v => `${v.vin},${v.timestamp}`)].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `vin_export_${new Date().toISOString().slice(0, 10)}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Handle manual input of VIN\n  const handleVinInput = e => {\n    setCurrentVin(e.target.value.toUpperCase());\n  };\n\n  // Delete a VIN from the list\n  const deleteVin = index => {\n    const newVins = [...vins];\n    newVins.splice(index, 1);\n    setVins(newVins);\n    localStorage.setItem('savedVins', JSON.stringify(newVins));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"VIN Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-container\",\n      children: [!showCamera ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: startCamera,\n        children: \"Open Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          className: \"video-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button camera-button\",\n            onClick: captureImage,\n            disabled: scanning,\n            children: scanning ? 'Processing...' : 'Capture VIN'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button cancel-button\",\n            onClick: stopCamera,\n            children: \"Close Camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Or upload an image of a VIN:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileUpload,\n          disabled: scanning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vin-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter VIN manually or from scan\",\n        value: currentVin,\n        onChange: handleVinInput,\n        maxLength: 17,\n        className: \"vin-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button save-button\",\n        onClick: saveVin,\n        disabled: !currentVin || !validateVin(currentVin),\n        children: \"Save VIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vin-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Saved VINs (\", vins.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), vins.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"vin-list\",\n          children: vins.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"vin-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vin-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"vin-number\",\n                children: item.vin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"vin-timestamp\",\n                children: new Date(item.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => deleteVin(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button export-button\",\n          onClick: exportToCSV,\n          children: \"Export to CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No VINs saved yet. Scan or enter a VIN to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A3/bYnAfwo7h3wJ/6xALkVbItjE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Tesseract","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","vins","setVins","scanning","setScanning","currentVin","setCurrentVin","error","setError","showCamera","setShowCamera","videoRef","canvasRef","streamRef","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","err","console","stopCamera","getTracks","forEach","track","stop","captureImage","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","toBlob","processImage","blob","result","recognize","logger","m","log","tessedit_char_whitelist","text","data","potentialVins","extractPotentialVins","length","validVin","find","validateVin","cleanText","replace","vinRegex","match","vin","test","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","readAsDataURL","saveVin","timestamp","Date","toISOString","savedVins","JSON","parse","localStorage","getItem","setItem","stringify","exportToCSV","csvContent","map","v","join","Blob","type","url","URL","createObjectURL","link","document","createElement","href","setAttribute","slice","body","appendChild","click","removeChild","handleVinInput","value","toUpperCase","deleteVin","index","newVins","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","muted","disabled","style","display","accept","onChange","placeholder","maxLength","item","toLocaleString","_c","$RefreshReg$"],"sources":["/home/reki/vin-scanner/src/App.js"],"sourcesContent":["// App.jsx - Main component for the VIN Scanner app\nimport React, { useState, useRef, useEffect } from 'react';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\n\nfunction App() {\n  const [vins, setVins] = useState([]);\n  const [scanning, setScanning] = useState(false);\n  const [currentVin, setCurrentVin] = useState('');\n  const [error, setError] = useState('');\n  const [showCamera, setShowCamera] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { facingMode: 'environment' } \n      });\n      \n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        streamRef.current = stream;\n        setShowCamera(true);\n      }\n    } catch (err) {\n      setError('Camera access denied or not available');\n      console.error('Error accessing camera:', err);\n    }\n  };\n\n  // Stop camera\n  const stopCamera = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n      setShowCamera(false);\n    }\n  };\n\n  // Clean up on unmount\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n  }, []);\n\n  // Capture image from camera\n  const captureImage = () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    \n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    \n    // Match canvas size to video feed\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    \n    // Draw the current video frame to the canvas\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    \n    // Convert canvas to blob for OCR processing\n    canvas.toBlob(processImage, 'image/jpeg');\n    \n    setScanning(true);\n  };\n\n  // Process image with Tesseract OCR\n  const processImage = async (blob) => {\n    try {\n      const result = await Tesseract.recognize(\n        blob,\n        'eng',\n        { \n          logger: m => console.log(m),\n          tessedit_char_whitelist: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n        }\n      );\n      \n      // Clean and parse the text to find potential VINs\n      const text = result.data.text;\n      console.log('OCR Result:', text);\n      \n      // Look for VIN-like patterns (17 alphanumeric characters)\n      const potentialVins = extractPotentialVins(text);\n      \n      if (potentialVins.length > 0) {\n        // Try to validate each potential VIN\n        const validVin = potentialVins.find(validateVin);\n        \n        if (validVin) {\n          setCurrentVin(validVin);\n          setError('');\n        } else {\n          setError('No valid VIN found in scan. Try again.');\n        }\n      } else {\n        setError('No VIN-like pattern found. Try again.');\n      }\n    } catch (err) {\n      setError('Failed to process image. Try again.');\n      console.error('OCR error:', err);\n    }\n    \n    setScanning(false);\n  };\n\n  // Extract potential VINs from OCR text\n  const extractPotentialVins = (text) => {\n    // Clean the text (remove spaces, new lines, etc.)\n    const cleanText = text.replace(/[\\s\\n\\r\\t]/g, '');\n    \n    // Look for 17-character sequences of letters and numbers\n    const vinRegex = /[A-HJ-NPR-Z0-9]{17}/gi; // VINs don't use I, O, or Q\n    return cleanText.match(vinRegex) || [];\n  };\n\n  // Validate a VIN using the standard VIN validation algorithm\n  const validateVin = (vin) => {\n    // Basic validation - length must be exactly 17\n    if (vin.length !== 17) return false;\n    \n    // Check for invalid characters (I, O, Q are not used in VINs)\n    if (/[IOQ]/i.test(vin)) return false;\n    \n    // This is a simplified validation\n    // A real implementation would include checksum validation\n    // For now we're just checking format\n    return true;\n  };\n\n  // Handle file uploads\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    setScanning(true);\n    \n    const reader = new FileReader();\n    reader.onload = async (event) => {\n      try {\n        const result = await Tesseract.recognize(\n          event.target.result,\n          'eng',\n          { \n            logger: m => console.log(m),\n            tessedit_char_whitelist: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n          }\n        );\n        \n        const text = result.data.text;\n        console.log('OCR Result:', text);\n        \n        const potentialVins = extractPotentialVins(text);\n        \n        if (potentialVins.length > 0) {\n          const validVin = potentialVins.find(validateVin);\n          \n          if (validVin) {\n            setCurrentVin(validVin);\n            setError('');\n          } else {\n            setError('No valid VIN found in image. Try again.');\n          }\n        } else {\n          setError('No VIN-like pattern found. Try again.');\n        }\n      } catch (err) {\n        setError('Failed to process image. Try again.');\n        console.error('OCR error:', err);\n      }\n      \n      setScanning(false);\n    };\n    \n    reader.readAsDataURL(file);\n  };\n\n  // Save current VIN to the list\n  const saveVin = () => {\n    if (currentVin && validateVin(currentVin)) {\n      const timestamp = new Date().toISOString();\n      setVins([...vins, { vin: currentVin, timestamp }]);\n      setCurrentVin('');\n      \n      // Also save to localStorage for persistence\n      const savedVins = JSON.parse(localStorage.getItem('savedVins') || '[]');\n      localStorage.setItem('savedVins', JSON.stringify([\n        ...savedVins, \n        { vin: currentVin, timestamp }\n      ]));\n    }\n  };\n\n  // Load saved VINs on initial render\n  useEffect(() => {\n    const savedVins = JSON.parse(localStorage.getItem('savedVins') || '[]');\n    setVins(savedVins);\n  }, []);\n\n  // Export to CSV\n  const exportToCSV = () => {\n    if (vins.length === 0) {\n      setError('No VINs to export');\n      return;\n    }\n    \n    const csvContent = [\n      'VIN,Timestamp',\n      ...vins.map(v => `${v.vin},${v.timestamp}`)\n    ].join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `vin_export_${new Date().toISOString().slice(0,10)}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Handle manual input of VIN\n  const handleVinInput = (e) => {\n    setCurrentVin(e.target.value.toUpperCase());\n  };\n\n  // Delete a VIN from the list\n  const deleteVin = (index) => {\n    const newVins = [...vins];\n    newVins.splice(index, 1);\n    setVins(newVins);\n    localStorage.setItem('savedVins', JSON.stringify(newVins));\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>VIN Scanner</h1>\n      \n      <div className=\"scan-container\">\n        {!showCamera ? (\n          <button className=\"action-button\" onClick={startCamera}>\n            Open Camera\n          </button>\n        ) : (\n          <div className=\"camera-container\">\n            <video \n              ref={videoRef}\n              autoPlay\n              playsInline\n              muted\n              className=\"video-preview\"\n            />\n            <div className=\"camera-controls\">\n              <button \n                className=\"action-button camera-button\"\n                onClick={captureImage}\n                disabled={scanning}\n              >\n                {scanning ? 'Processing...' : 'Capture VIN'}\n              </button>\n              <button className=\"action-button cancel-button\" onClick={stopCamera}>\n                Close Camera\n              </button>\n            </div>\n          </div>\n        )}\n        \n        <canvas ref={canvasRef} style={{ display: 'none' }} />\n        \n        <div className=\"upload-container\">\n          <p>Or upload an image of a VIN:</p>\n          <input \n            type=\"file\" \n            accept=\"image/*\" \n            onChange={handleFileUpload}\n            disabled={scanning}\n          />\n        </div>\n      </div>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"vin-input-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter VIN manually or from scan\"\n          value={currentVin}\n          onChange={handleVinInput}\n          maxLength={17}\n          className=\"vin-input\"\n        />\n        <button \n          className=\"action-button save-button\"\n          onClick={saveVin}\n          disabled={!currentVin || !validateVin(currentVin)}\n        >\n          Save VIN\n        </button>\n      </div>\n      \n      <div className=\"vin-list-container\">\n        <h2>Saved VINs ({vins.length})</h2>\n        {vins.length > 0 ? (\n          <>\n            <ul className=\"vin-list\">\n              {vins.map((item, index) => (\n                <li key={index} className=\"vin-item\">\n                  <div className=\"vin-info\">\n                    <span className=\"vin-number\">{item.vin}</span>\n                    <span className=\"vin-timestamp\">{new Date(item.timestamp).toLocaleString()}</span>\n                  </div>\n                  <button className=\"delete-button\" onClick={() => deleteVin(index)}>\n                    Delete\n                  </button>\n                </li>\n              ))}\n            </ul>\n            <button className=\"action-button export-button\" onClick={exportToCSV}>\n              Export to CSV\n            </button>\n          </>\n        ) : (\n          <p>No VINs saved yet. Scan or enter a VIN to get started.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}